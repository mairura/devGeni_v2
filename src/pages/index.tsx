import { Box, IconButton, useTheme } from "@mui/material";
import Head from "next/head";
import NavbarPage from "../../components/Home/NavbarPage";
import LandingPage from "../../components/Home/LandingPage";
import PartnersPage from "../../components/Home/PartnersPage";
import ProjectsPage from "../../components/Home/ProjectsPage";
import AboutDevgeni from "../../components/Home/AboutDevgeniPage";
import ServicesPage from "../../components/Home/ServicePage";
import BuildPage from "../../components/Home/BuildPage";
import { createTheme } from "@mui/material/styles";
import React, { createContext, useContext } from "react";
import { ThemeProvider } from "@emotion/react";
import { Brightness4, Brightness7 } from "@mui/icons-material";
import FooterPage from "../../components/Home/FooterPage";
import SkillPage from "../../components/Home/SkillPage";

const ColorModeContext = createContext({ toggleColorMode: () => {} });

const theme = useTheme();
const colorMode = useContext(ColorModeContext);

function MyApp() {
  const theme = useTheme();
  const colorMode = useContext(ColorModeContext);
  return (
    <IconButton sx={{ ml: 1 }} onClick={colorMode.toggleColorMode}>
      {theme.palette.mode === "dark" ? <Brightness7 /> : <Brightness4 />}
    </IconButton>
  );
}

export default function Home() {
  const [mode, setMode] = React.useState<"light" | "dark">("light");
  const colorMode = React.useMemo(
    () => ({
      toggleColorMode: () => {
        setMode((prevMode) => (prevMode === "light" ? "dark" : "light"));
      },
    }),
    []
  );

  const theme = React.useMemo(
    () =>
      createTheme({
        palette: {
          mode,
        },
      }),
    [mode]
  );

  return (
    <>
      <Head>
        <title>devGeni App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ColorModeContext.Provider value={ colorMode }>
        <ThemeProvider theme={theme}>
          <Box sx={{ background: mode === "light" ? "#fff" : "#000f08" }}>
            <NavbarPage theme={theme} colorMode={colorMode} mode={mode} />
            <LandingPage theme={theme} mode={mode} />
            <PartnersPage theme={theme} mode={mode} />
            <ProjectsPage theme={theme} mode={mode} />
            <AboutDevgeni theme={theme} mode={mode} />
            <ServicesPage theme={theme} mode={mode} />
            <BuildPage theme={theme} mode={mode} />
            <SkillPage theme={theme} mode={mode} />
            <FooterPage theme={theme} mode={mode} />
          </Box>
        </ThemeProvider>
      </ColorModeContext.Provider>
    </>
  );
}
